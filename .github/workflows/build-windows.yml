name: Build Vanity EXE (Windows)

on:
  push:                       # runs on every push (any branch)
  workflow_dispatch:          # allows manual runs from the Actions UI

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show workspace info (debug)
        shell: pwsh
        run: |
          Write-Host "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
          Write-Host "Current directory:"
          pwd
          Write-Host "Top-level files/dirs:"
          Get-ChildItem -LiteralPath $env:GITHUB_WORKSPACE -Force | Sort-Object Name | Format-Table -AutoSize

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (if present)
        shell: pwsh
        run: |
          python -m pip install --upgrade pip setuptools wheel
          $req = Join-Path $env:GITHUB_WORKSPACE "dependency-installs\requirements.txt"
          if (Test-Path $req) {
            Write-Host "Installing from $req"
            pip install -r $req
          } else {
            Write-Host "No dependency-installs/requirements.txt; installing common deps"
            pip install pyinstaller pynacl mnemonic cryptography rich base58
          }

      - name: Ensure PyInstaller
        shell: pwsh
        run: |
          pip install --upgrade pyinstaller

      - name: Build EXE with PyInstaller (robust)
        shell: pwsh
        run: |
          # Ensure we are in the repo root
          Set-Location -Path $env:GITHUB_WORKSPACE
          Write-Host "Building from: $(Get-Location)"
          Write-Host "Repo files:"
          Get-ChildItem -Force

          if (-Not (Test-Path ".\vanity.py")) {
            Write-Host "ERROR: vanity.py not found in repository root; aborting build."
            exit 1
          }

          # Build dynamic --add-data args only for folders that exist
          $addDataArgs = @()
          $candidates = @("config","vane","dependency-installs")
          foreach ($c in $candidates) {
            if (Test-Path $c) {
              $arg = "$env:GITHUB_WORKSPACE\$c;$c"
              Write-Host "Including data: $arg"
              $addDataArgs += "--add-data"
              $addDataArgs += $arg
            } else {
              Write-Host "Skipping missing: $c"
            }
          }

          $pyArgs = @("--onefile","--console") + $addDataArgs + @("$env:GITHUB_WORKSPACE\vanity.py")
          Write-Host "pyinstaller $($pyArgs -join ' ')"
          pyinstaller @pyArgs

      - name: Show dist contents (debug)
        shell: pwsh
        run: |
          Set-Location -Path $env:GITHUB_WORKSPACE
          if (Test-Path ".\dist\vanity.exe") {
            Write-Host "dist contents:"
            Get-ChildItem -LiteralPath ".\dist" -Force
          } else {
            Write-Host "No dist\\vanity.exe found â€” inspect previous logs for PyInstaller errors."
            if (Test-Path ".\dist") { Get-ChildItem -LiteralPath ".\dist" -Recurse -Force }
            exit 1
          }

      - name: Zip executable
        shell: pwsh
        run: |
          if (Test-Path ".\vanity.zip") { Remove-Item ".\vanity.zip" -Force }
          Compress-Archive -Path ".\dist\vanity.exe" -DestinationPath ".\vanity.zip"
          Write-Host "Created vanity.zip"

      - name: Upload artifact (downloadable from Actions UI)
        uses: actions/upload-artifact@v4
        with:
          name: vanity-windows-exe
          path: vanity.zip
